추천시스템 GPT 첨삭
────────────────────────────────────────────────────────
[추천 시스템 개요]
────────────────────────────────────────────────────────
본 추천 시스템은 “클러스터링 + 협업 필터링”을 결합하여 사용자에게 맞춤형 추천을 제공하는 구조입니다.

먼저, 협업 필터링(Collaborative Filtering)은 사용자들의 과거 데이터(예: 별점, 클릭, 좋아요)를 분석해서 “비슷한 취향의 사용자”나 “비슷한 속성을 가진 아이템”을 유추하고, 이를 기반으로 아직 사용자가 선택하지 않은 아이템을 추천하는 기법입니다.

협업 필터링 방법에는 크게 세 가지가 있습니다:  
1) 사용자 기반 협업 필터링(User-based)  
2) 아이템 기반 협업 필터링(Item-based)  
3) 행렬 분해(Matrix Factorization) 기반 협업 필터링  

본 시스템에서는 “사용자 기반 협업 필터링”을 중심으로 구현했습니다.

────────────────────────────────────────────────────────
[클러스터링 과정]
────────────────────────────────────────────────────────
비슷한 행동 패턴을 가진 사용자 그룹을 찾기 위해, 사용자(또는 커플)의 나이, MBTI(성격 유형), 예산, 결혼 예정일 등 특성을 입력받습니다. 예를 들어, MBTI 유형이나 결혼 시점(계절, 날짜)을 통해서도 사용자들의 선호 경향이 달라질 수 있다고 판단했기 때문입니다.

■ 가중치 자동화(베이지안 최적화)  
단순히 각 특성에 대한 중요도(가중치)를 임의로 설정하면 군집화 결과의 신뢰도가 낮을 수 있으므로, 베이지안 최적화 기법을 통해 “가장 유망해 보이는 가중치 조합”을 탐색합니다. 이렇게 얻은 최적 가중치 세팅으로 군집화를 수행함으로써, 보다 근거 있는 그룹화를 달성합니다.

■ 군집 수 결정(Elbow 기법)  
군집의 수도 임의로 정하면 성능이 떨어질 가능성이 있어서, SSE(군집 내 편차 제곱합) 곡선을 관찰해 “이제 더 이상 군집 수를 늘려도 큰 이득이 없는 지점(Knee Point)”을 찾아 그 값을 최적의 군집 수로 삼았습니다.

■ 군집 알고리즘 비교(K-means, GMM, Hierarchical 등)  
깊이 있는 군집화를 위해 K-means(중심점 기반), GMM(가우시안 혼합 모델), Hierarchical(계층적 트리 구조) 등을 적용·비교했습니다.  
이때, 다음과 같은 여러 군집 평가 지표를 활용해 “사용자 데이터에 가장 적합한 모델”을 골랐습니다:  
• Silhouette Score: 군집 내 응집도와 군집 간 분리도를 측정  
• Davies-Bouldin Score: 군집 간 평균 거리 대비 군집 내부 평균 거리를 측정(점수가 낮을수록 좋음)  
• Calinski-Harabasz Score: 군집 간 분산 대비 군집 내 분산을 평가(점수가 높을수록 좋음)  
• Dunn Index: (군집 간 최소 거리) / (군집 내 최대 거리)를 계산(점수가 높을수록 좋음)

본 프로젝트에서는 위 지표들의 값을 혼합하여, “Composite Score”를 만들어 각 알고리즘의 성능을 한눈에 비교했습니다. 최종적으로, Composite Score가 가장 높은 알고리즘을 선택하여 군집화를 진행했습니다.

────────────────────────────────────────────────────────
[협업 필터링 매커니즘과 개인화]
────────────────────────────────────────────────────────
(1) 그룹 내 기본 추천  
동일 그룹(군집) 내 유저들이 선정한 아이템(또는 매긴 점수)을 토대로 “이 그룹 사람들은 이런 아이템을 주로 선호한다”는 정보를 얻습니다. 이를 바탕으로 아직 아이템을 시도해보지 않은 유저에게 추천합니다.

(2) 사용자 간 유사도 반영  
같은 군집 내 사용자라도 어느 정도 차이가 있을 수 있으므로, 군집화했을 때 계산한 유클리드 거리(혹은 벡터 유사도)를 다시 활용합니다. 그룹의 중심에서 가까울수록, 또는 유사 고객들과의 거리가 짧을수록 추천 점수를 더 높게 부여하는 식으로, 더욱 세밀한 개인화가 가능합니다.

────────────────────────────────────────────────────────
[자주 묻는 질문 (Q&A)]
────────────────────────────────────────────────────────

Q1) “가중치를 베이지안 최적화로 찾는다고 했는데, 왜 그게 필요한가요?”  
A1) 만약 “나이, 예산, MBTI, 결혼예정일 등” 각각에 임의 가중치를 주면, 어떤 특성이 과도하게 반영되거나 무시되어 군집 결과가 왜곡될 수 있습니다. 베이지안 최적화는 적은 시행착오로 “군집 성능을 최대화하는 가중치 조합”을 효율적으로 찾아내기 때문에, 보다 객관적이고 신뢰도 높은 그룹화를 할 수 있습니다.

Q2) “사용자 기반 협업 필터링을 택한 이유가 있나요?”  
A2) 이 시스템은 유사한 사용자끼리 정보를 공유하는 구조가 직관적이고, 결혼·예산 등에 대한 행태가 유사한 집단을 찾으려면 사용자 기반이 더 자연스러웠습니다. 아이템 특성 측면에서 공통점이 많다면, 아이템 기반 협업 필터링도 고려할 수 있습니다.

Q3) “Knee Point를 찾는 Elbow 기법은 어떻게 작동하나요?”  
A3) 군집 수(K)를 1, 2, 3… 점진적으로 늘려가며, 군집 내 오차(SSE)를 측정해 그래프로 그려보면, 어느 순간부터 K를 더 늘려도 SSE가 급격히 줄지 않고 완만해지는 지점이 있습니다. 그 지점(‘무릎’처럼 꺾이는 지점)을 최적 K로 삼음으로써, 불필요하게 군집 수가 많아져도 얻는 이득이 적은 상황을 피할 수 있습니다.

Q4) “추가로 행렬 분해 방식(Matrix Factorization)도 고려할 수 있을까요?”  
A4) 가능합니다. 하지만 이 시스템은 ‘사용자 정보를 바탕으로 명시적 군집화를 먼저 한다’는 목표였고, 데이터가 충분히 쌓이지 않은 상태에서 사용자 기반 CF가 직관적이었습니다. 만약 사용자-아이템 평점 행렬이 큰 규모가 되고, 잠재 인자를 분석하는 것이 더 중요해진다면, 행렬 분해 기법도 충분히 시도할 만합니다.

────────────────────────────────────────────────────────


그림 설명
────────────────────────────────────────────────────────
1) “다차원을 3D로 투영한다”는 것의 의미
────────────────────────────────────────────────────────
실제 데이터는 (나이, 예산, MBTI 4차원, 결혼 예정일 sin/cos, 사용자 거리 등) 여러 특성으로 구성되어 있습니다. 이처럼 5차원, 6차원 이상의 데이터를 곧바로 3차원 그래프에 모두 표현할 수는 없으므로,  
• 어떤 특성은 그대로 (예: 나이, 예산)  
• 어떤 특성(한 번에 여러 차원)을 TSNE(1D)로 축소  

이런 식으로 합쳐서 “(X, Y, Z) = (축1, 축2, 축3)” 형태로 시각화합니다.

────────────────────────────────────────────────────────
2) TSNE(1D)는 무엇을 하는가?
────────────────────────────────────────────────────────
TSNE(t-distributed Stochastic Neighbor Embedding)는  
• “고차원 데이터 안에서 서로 가까운 점들은 저차원에서도 가깝게 유지하고, 먼 점들은 멀리 유지하려는” 비선형 차원 축소 기법  
• 2D나 3D로 시각화할 때 많이 사용되지만, 여기서는 “1차원 값 하나”로 축소(혹은 임베딩)  
• 예컨대 “MBTI 4차원” → (E/I, S/N, T/F, J/P) 각각 0/1로 인코딩하면 4차원인데, 이를 TSNE로 1차원으로 바꾸면, 서로 유사도가 높은 MBTI들의 TSNE 값이 가깝게 형성됩니다.

이걸 축 하나(예: Z축)로 배치하면, Z가 비슷한 사용자들은 “MBTI 차원에서 서로 유사하다”고 해석할 수 있게 됩니다.

────────────────────────────────────────────────────────
3) 예시: “3D User Clusters” 해설
────────────────────────────────────────────────────────
(1) X축: Age(scaled)  
   → 사용자 나이를 StandardScaler(평균 0, 편차 1) 또는 MinMaxScaler(0~1 범위로)로 정규화한 뒤, 결과를 X 좌표로 사용  
(2) Y축: Budget(scaled)  
   → 예산 역시 큰 스케일(수백만~수천만)을 0~1 혹은 [몇 ~ 몇] 범위로 압축. 이를 Y 좌표로 사용  
(3) Z축: MBTI-TSNE(1D)  
   → MBTI 4차원 + 필요한 다른 텍스트적 특성을 묶어 t-SNE를 적용해 “1차원”으로 만든 값.  
      - 값이 비슷하면 MBTI 유형이 비슷하거나, 인코딩된 특징이 가까운 사용자라는 뜻

이렇게 세 축으로 3D 공간을 만들었을 때, “클러스터 0, 1, 2, …”마다 군집이 특정 영역에 밀집해 있으면,  
• 그 군집에 속한 사용자들의 나이·예산이 비슷하거나,  
• MBTI-TSNE 값이 비슷(즉 MBTI 패턴이 비슷)해서 기존 고차원 공간에서도 가까운 관계임을 의미합니다.

────────────────────────────────────────────────────────
4) 예시: “3D Couple Clusters” 해설
────────────────────────────────────────────────────────
(1) X축: Age-part TSNE(1D)  
   - 여성 나이, 남성 나이, 둘의 나이 차이(age_diff) 등 3~4차원을 t-SNE로 1차원으로 쭉 눌러버린 값  
   - 비슷한 (부부 나이 구조)를 가진 커플들은 이 X 값이 가깝게 모입니다.  
(2) Y축: Budget(scaled)  
   - 커플 예산을 0~1 범위나 [최소값, 최대값] 범위로 정규화  
(3) Z축: Date+Dist TSNE(1D)  
   - 결혼 예정일(월, 일을 sin/cos 변환), 사용자 클러스터 거리(남녀 user-cluster distance) 등 여러 특성을 t-SNE(1D)로 합침  
   - 이 값이 유사하면 “결혼 예정일과 user-based 클러스터 거리가 비슷한” 커플끼리 근접한 좌표에 나타납니다.

이렇게 X/Y/Z 각각이 스케일링 되거나 t-SNE 화된 값이다 보니, 실제로 어떤 축이 -100에서 +100까지 범위를 가지는 등 숫자의 절댓값에는 큰 의미가 없습니다. 중요한 것은 “데이터 간 상대적 위치, 색깔(군집)”입니다. Z가 -50인 군집과 Z가 +100 근처인 군집은, 결혼 날짜나 user 거리 면에서 꽤 다른 패턴이라는 뜻으로 해석하면 됩니다.

────────────────────────────────────────────────────────
5) 왜 “층 모양” 또는 “띠 형식”으로 보일까?
────────────────────────────────────────────────────────
가령 나이와 예산 같은 수치형 특성은 연속 값이므로, 스케일링 후에도 3D 공간에서 어느 정도 꾸준한 분포를 형성합니다. 그러나 MBTI(1차원 TSNE)나 날짜+distance(1차원 TSNE)는 개별 속성값이 유사한 집단끼리 한 덩어리가 되면서, 그래프상 “평행한 띠” 형태가 나타날 수 있습니다.

• t-SNE 자체가 “유사한 데이터끼리 모으고, 다른 그룹은 떨어뜨리는” 과정에서, 비슷한 값들이 하나의 클러스터 대역을 만들어낼 수 있음  
• 더미 데이터이기 때문에 더 극적으로 층이 구분되는 현상도 있습니다(실제 서비스 데이터라면 좀 더 복합적으로 섞여 나타날 가능성이 큼)

────────────────────────────────────────────────────────
6) Elbow Plot 다시 짚기 (커플 vs. 사용자)
────────────────────────────────────────────────────────
• Elbow Plot은 SSE(군집 내 제곱오차합) 기준으로 “군집 수(k)를 1부터 늘려가며, SSE가 얼마나 감소하는지”를 그린 그래프  
• 예: “커플” 데이터에선 k=8 부근에서 “더 이상 SSE 감소폭이 크지 않다”는 점을 발견해 Elbow=8로 설정  
• “사용자” 데이터는 특성 수가 많고(나이, 예산, MBTI 등), 표본 수도 다른 탓에 k=10 부근에서 Elbow가 나타남  
• 이 값들(8군집, 10군집)이 3D 그래프에 표시된 색상(Cluster 0~7, 0~9)으로 나타남

────────────────────────────────────────────────────────
7) 요약: 시각화 설명 키포인트
────────────────────────────────────────────────────────
1. “고차원 → 3차원”으로 축소하는 과정:  
   - 일부 특성(나이·예산)은 직접 축으로, 나머지 복합 특성(MBTI, 날짜, 거리 등)은 t-SNE로 1차원화
2. 차원 축소(특히 t-SNE)는 “값 간 상대적 거리”를 유지하려고 하므로, 같은 클러스터끼리는 비슷한 좌표 영역에 모이게 됨  
3. Elbow Plot은 “군집 수를 몇 개로 할지”를 시각적으로 결정하는 방법  
4. 실제 눈에 보이는 X/Y/Z 숫자는 중요한 게 아니라, “같은 색(군집) 점들이 어떤 범위에 모여 있는가, 군집별로 시각적으로 얼마나 분리되어 있는가”를 통찰하는 것이 핵심  
5. 더미 데이터에서는 군집들이 비교적 층층이 잘 구분돼 보이지만, 실제 데이터에서는 조금 더 섞일 수도 있음  